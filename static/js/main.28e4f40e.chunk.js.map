{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RAoCeA,MAjCf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,qBAAIK,UAAU,SAAd,UACA,oBAAIA,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,mBAAGL,UAAU,iBAAb,SAA+BH,EAAQS,MAAM,EAAE,iBCgD5CC,G,kNA3DbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAI,4DADzC,gBACaJ,EADb,EACHK,KAAQA,KAAQL,OACvB,EAAKM,SAAS,CAAEN,SAAOD,WAAY,IAFzB,2C,uDAIZ,WACEQ,KAAKN,c,oBAEP,WACE,MAA6BM,KAAKT,MAA3BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAElB,OAEG,wBAAQV,UAAU,YAAlB,SACGS,EACD,qBAAKT,UAAU,SAAf,SACG,sBAAMA,UAAY,cAAlB,yBAGE,qBAAKA,UAAW,SAAhB,SACGU,EAAOP,KAAI,SAAAe,GACV,OAAO,cAAC,EAAD,CACCC,GAAID,EAAMC,GAAIxB,KAAMuB,EAAMvB,KAC1BC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QALHmB,EAAMC,e,GAzBxBE,IAAMC,YCCzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,a","file":"static/js/main.28e4f40e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport \"./Movie.css\"\r\nfunction Movie({year, title, summary, poster, genres}) {\r\n    return (\r\n        <div className=\"movie\">\r\n          <img src={poster} alt={title} title={title} />\r\n          <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"genres\">\r\n            <ul className=\"movie__genres\">\r\n              {genres.map((genre, index) => (\r\n                <li key={index} className=\"genres__genre\">\r\n                  {genre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}</p>\r\n        </ul>\r\n        </div>\r\n        </div>\r\n      );\r\n}\r\n\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title :PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster:PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n\r\n}\r\n\r\nexport default Movie;","import React from 'react';\n// import opTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from './Movie';\nimport \"./App.css\"\n\nclass  App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  }\n  getMovies = async () => {\n    const {data : {data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\")\n    this.setState({ movies,isLoading : false })\n  };\n  componentDidMount () {\n    this.getMovies();\n  }\n  render(){\n    const {isLoading, movies } = this.state;\n    \n    return( \n      \n       <setion className=\"container\">\n         {isLoading ?(\n         <div className=\"loader\"> \n            <span className = \"lodaer_text\">\"Loading\"</span>\n            </div> \n            ) : (\n              <div className =\"movies\">\n                {movies.map(movie => {\n                  return <Movie key={movie.id} \n                          id={movie.id} year={movie.year} \n                          title={movie.title} \n                          summary={movie.summary} \n                          poster={movie.medium_cover_image}\n                          genres={movie.genres}\n                          />                  \n                })}\n                </div>\n              )}\n        </setion>\n  \n  )}\n}\n/**\n * \n * mounting   :  1. 태어나는 것\n *               2. constructor (render 호출 전에 이미 시작)\n *               3. RENDER\n *               4. componentDidMount (render 후)\n * updating   : \n * unmounting : component가 죽는 것( 페이지 바꿀때)\n * \n * setState 를 호출ㄹ하면\n * component를 호출하고\n * render 호출하고\n * 다음 업데이트 완료되었다고 했을때\n * componentDidUpdate 가 실행\n * \n * ** componentDidMount : component가 mount 되자마자 호출 되는 것\n *  javascript class 안에 있으면 있을 때 component class는 className으로 써줘야함\n * 잡지식\n * 1. img 에 alrt title 을 사용하는 이유 : 마우스를 위에 올렸을대 사진에 alt에 설정된 title이 뜸\n */\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('potato')\n\n\n);\n/**\n * component\n * jsx -> react 에 특화된 개념\n * 재사용 가능 한 component를 만들 수 있음\n */"],"sourceRoot":""}